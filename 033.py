import math
import time   #  შემოგვყავს ტაიმერი რათა დავითვალოთ გამოთვლაზე დახარჯული დრო
start = time.time()
numer = 1
denom = 1

#  ფორმულა არის (10*n + i) / (10*i +d) = n / d


for denominator  in range(10,100):  # ვაგენერირებთ მნიშვნელს
    for inumerator in range(10,denominator):    # ვაგენერირებთ მრიცხველს რომელიც ყოველთვის ნაკლები იქნება მნიშვნელზე რადგან : There are exactly four non-trivial examples of this type of fraction, less than one in value, and containing two digits in the numerator and denominator.

        n = inumerator // 10        # ვპოულობთ მრიცხველის ათეულის ჯერად რიცხვს
        i_1 = inumerator % 10       # ვპოულობთ მრიცხველის ერთეულების რიცხვს
        d = denominator % 10        # ვპოულობთ მნიშვნელის ერთეულების რიცხვს
        i_2 = denominator // 10     # ვპოულობთ მნიშვნელის ათეულის ჯერად რიცხვს

        
        if  (i_1 == i_2) and ((10*n + i_1)*d == (10*i_2 +d)*n):  # თუ i_1 = i_2 = i  და ამასგარდა კამყოფილდება ზემოთ აღნიშნული ფორმულა მაშინ შეგვიძლია დავიმახოვროდ საძებარ იცვლადები
           denom *= d    # რადგან წილადები უნდა გავამრავლოთ ერთმანეთზე თამამად შეგვიძლია მისი მრიცხველი და მნიშვნელი გავამრავლოთ ერთმანეთზე, დამოუკიდებლად
           numer *= n    # რადგან წილადები უნდა გავამრავლოთ ერთმანეთზე თამამად შეგვიძლია მისი მრიცხველი და მნიშვნელი გავამრავლოთ ერთმანეთზე, დამოუკიდებლად

print(denom // math.gcd(numer, denom))  # ბოლოს ვიპოვით მრიცხველისა და მნიშვნელის საერთო გამყოფს და მნიშვნელს გამვოფთ ამ რიცხვზე რის შემდეგადაც მივიღებთ პასუხს

print("Calculation time:" , time.time() -start)     # ვპრინტავთ გამოთვალზე დახარჯულ დროს